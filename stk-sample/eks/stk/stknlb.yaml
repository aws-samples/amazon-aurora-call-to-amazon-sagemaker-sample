apiVersion: v1
kind: Service
metadata:
  name: stk-arm-svc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "80"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP    
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-ip-address-type: "dualstack"
spec:
  selector:
    app: stkarm
  ports:
    - protocol: UDP
      port: 8081
      targetPort: 8081
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stkarm
  name: stkarm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stkarm
  template:
    metadata:
      labels:
        app: stkarm
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: default
      containers:
      - env:
        - name: UDP_SOCKET_PORT
          value: "8081"
        - name: UDP_SOCKET_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: 584416962002.dkr.ecr.us-west-2.amazonaws.com/stk:arm0.11.0
        imagePullPolicy: Always
        name: stk
        command: ["/stk-code/start-server.sh"]
        ports:
          - name: tcp
            containerPort: 80
            protocol: TCP
          - name: udp
            containerPort: 8081
            protocol: UDP
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - /udp-health-probe.py
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
      #hostNetwork: true
