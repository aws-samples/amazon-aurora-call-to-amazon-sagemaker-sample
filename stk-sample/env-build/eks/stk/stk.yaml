apiVersion: v1
kind: Service
metadata:
  name: stk-svc
  annotations:
    #service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "80"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP    
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  selector:
    app: stk
  ports:
    - protocol: UDP
      port: 8081
      targetPort: 8081
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stk
  name: stk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stk
  template:
    metadata:
      labels:
        app: stk
    spec:
      #nodeSelector:
      #  lifecycle: Ec2Spot
      containers:
      - env:
        image: 584416962002.dkr.ecr.us-west-2.amazonaws.com/stk:0.1
        imagePullPolicy: Always
        name: stk
        command: ["/home/supertuxkart/stk-code/start-server.sh"]
        ports:
          - name: tcp
            containerPort: 80
            protocol: TCP
          - name: udp
            containerPort: 8081
            protocol: UDP
        #readinessProbe:
        #  tcpSocket:
        #    port: 8080
        #  initialDelaySeconds: 5
        #  periodSeconds: 10
        #livenessProbe:
        #  tcpSocket:
        #    port: 8080
        #  initialDelaySeconds: 5
        #  periodSeconds: 10
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
      #hostNetwork: true
